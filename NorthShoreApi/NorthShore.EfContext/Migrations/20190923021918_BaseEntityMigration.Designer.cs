// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NorthShore.EfContext.Context;

namespace NorthShore.EfContext.Migrations
{
    [DbContext(typeof(NorthShoreDbContext))]
    [Migration("20190923021918_BaseEntityMigration")]
    partial class BaseEntityMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NorthShore.Domain.Entities.Food", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calorie");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<DateTimeOffset?>("DeletedAt");

                    b.Property<long?>("DeletedBy");

                    b.Property<bool>("IsDairyFree");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsGlutenFree");

                    b.Property<bool>("IsNutFree");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("NorthShore.Domain.Entities.FoodMenuMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<DateTimeOffset?>("DeletedAt");

                    b.Property<long?>("DeletedBy");

                    b.Property<long>("FoodId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("MenuId");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodMenuMappings");
                });

            modelBuilder.Entity("NorthShore.Domain.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<DateTimeOffset?>("DeletedAt");

                    b.Property<long?>("DeletedBy");

                    b.Property<decimal>("DiscountRate");

                    b.Property<decimal>("DiscountedPrice");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<decimal>("TotalCalorie");

                    b.Property<decimal>("TotalPrice");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("NorthShore.Domain.Entities.FoodMenuMapping", b =>
                {
                    b.HasOne("NorthShore.Domain.Entities.Food", "Food")
                        .WithMany("MenuMappings")
                        .HasForeignKey("FoodId")
                        .HasConstraintName("FK_FoodMenuMapping_Food")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NorthShore.Domain.Entities.Menu", "Menu")
                        .WithMany("FoodMappings")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_FoodMenuMapping_Mood")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
